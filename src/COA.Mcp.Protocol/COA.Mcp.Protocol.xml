<?xml version="1.0"?>
<doc>
    <assembly>
        <name>COA.Mcp.Protocol</name>
    </assembly>
    <members>
        <member name="T:COA.Mcp.Protocol.ToolsCapabilityMarker">
            <summary>
            Marker type indicating tool capability support.
            Per MCP specification, this should serialize as an empty object {}.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.PromptsCapabilityMarker">
            <summary>
            Marker type indicating prompts capability support.
            Per MCP specification, this should serialize as an empty object {}.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.SamplingCapabilityMarker">
            <summary>
            Marker type indicating sampling capability support.
            Per MCP specification, this should serialize as an empty object {}.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.CapabilityMarkerConverter`1">
            <summary>
            Custom JSON converter that ensures capability markers serialize to empty objects.
            This maintains backward compatibility with existing code using anonymous objects.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.InvalidParametersException">
            <summary>
            Exception thrown when tool parameters are invalid.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.InvalidParametersException.ParameterName">
            <summary>
            Gets the parameter name that was invalid.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.InvalidParametersException.ExpectedFormat">
            <summary>
            Gets the expected parameter type or format.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.InvalidParametersException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:COA.Mcp.Protocol.InvalidParametersException"/> class.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.InvalidParametersException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:COA.Mcp.Protocol.InvalidParametersException"/> class with a message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:COA.Mcp.Protocol.InvalidParametersException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:COA.Mcp.Protocol.InvalidParametersException"/> class with parameter details.
            </summary>
            <param name="message">The error message.</param>
            <param name="parameterName">The name of the invalid parameter.</param>
        </member>
        <member name="M:COA.Mcp.Protocol.InvalidParametersException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:COA.Mcp.Protocol.InvalidParametersException"/> class with full details.
            </summary>
            <param name="message">The error message.</param>
            <param name="parameterName">The name of the invalid parameter.</param>
            <param name="expectedFormat">The expected format or type.</param>
        </member>
        <member name="M:COA.Mcp.Protocol.InvalidParametersException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:COA.Mcp.Protocol.InvalidParametersException"/> class with an inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:COA.Mcp.Protocol.JsonRpcMessage">
            <summary>
            Base class for all JSON-RPC messages conforming to JSON-RPC 2.0 specification.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcMessage.JsonRpc">
            <summary>
            Gets or sets the JSON-RPC protocol version. Always "2.0" for JSON-RPC 2.0.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.JsonRpcRequest">
            <summary>
            Represents a JSON-RPC 2.0 request message.
            </summary>
            <remarks>
            A request object must have an id to correlate with the response.
            </remarks>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcRequest.Id">
            <summary>
            Gets or sets the request identifier. Used to correlate requests with responses.
            </summary>
            <value>Can be a string, number, or null.</value>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcRequest.Method">
            <summary>
            Gets or sets the name of the method to be invoked.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcRequest.Params">
            <summary>
            Gets or sets the parameters for the method call.
            </summary>
            <value>Can be an object, array, or null if no parameters are needed.</value>
        </member>
        <member name="T:COA.Mcp.Protocol.JsonRpcResponse">
            <summary>
            Represents a JSON-RPC 2.0 response message.
            </summary>
            <remarks>
            A response must contain either a result or an error, but not both.
            </remarks>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcResponse.Id">
            <summary>
            Gets or sets the identifier matching the request this response is for.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcResponse.Result">
            <summary>
            Gets or sets the result of the method call.
            </summary>
            <value>Present only if the request succeeded. Mutually exclusive with Error.</value>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcResponse.Error">
            <summary>
            Gets or sets the error information if the request failed.
            </summary>
            <value>Present only if the request failed. Mutually exclusive with Result.</value>
        </member>
        <member name="T:COA.Mcp.Protocol.JsonRpcError">
            <summary>
            Represents an error in a JSON-RPC 2.0 response.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcError.Code">
            <summary>
            Gets or sets the error code.
            </summary>
            <remarks>
            Standard error codes:
            -32700: Parse error
            -32600: Invalid Request
            -32601: Method not found
            -32602: Invalid params
            -32603: Internal error
            -32000 to -32099: Server error
            </remarks>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcError.Message">
            <summary>
            Gets or sets a short description of the error.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcError.Data">
            <summary>
            Gets or sets additional information about the error.
            </summary>
            <value>May contain detailed error information, stack traces, or context.</value>
        </member>
        <member name="T:COA.Mcp.Protocol.JsonRpcNotification">
            <summary>
            Represents a JSON-RPC 2.0 notification message.
            </summary>
            <remarks>
            A notification is a request without an id. The server must not reply to a notification.
            </remarks>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcNotification.Method">
            <summary>
            Gets or sets the name of the method to be invoked.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.JsonRpcNotification.Params">
            <summary>
            Gets or sets the parameters for the method call.
            </summary>
            <value>Can be an object, array, or null if no parameters are needed.</value>
        </member>
        <member name="T:COA.Mcp.Protocol.JsonRpcErrorCodes">
            <summary>
            Defines standard JSON-RPC 2.0 error codes and MCP-specific error codes.
            This replaces magic numbers with named constants for better code readability and maintenance.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.ParseError">
            <summary>
            Invalid JSON was received by the server.
            An error occurred on the server while parsing the JSON text.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.InvalidRequest">
            <summary>
            The JSON sent is not a valid Request object.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.MethodNotFound">
            <summary>
            The method does not exist / is not available.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.InvalidParams">
            <summary>
            Invalid method parameter(s).
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.InternalError">
            <summary>
            Internal JSON-RPC error.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.ServerError">
            <summary>
            Generic server error. Reserved for implementation-defined server-errors.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.ResourceNotFound">
            <summary>
            The requested resource could not be found.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.ResourceAccessDenied">
            <summary>
            Access to the requested resource was denied.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.OperationTimeout">
            <summary>
            The requested operation timed out.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.ServiceUnavailable">
            <summary>
            The server is temporarily unavailable.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.OperationCancelled">
            <summary>
            The operation was cancelled by the client or server.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.ToolNotFound">
            <summary>
            A tool with the requested name was not found.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.ToolExecutionError">
            <summary>
            The tool failed to execute due to invalid arguments or runtime error.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.WorkspaceNotFound">
            <summary>
            The requested workspace could not be accessed or does not exist.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.IndexNotAvailable">
            <summary>
            The workspace index is not available or corrupted.
            </summary>
        </member>
        <member name="F:COA.Mcp.Protocol.JsonRpcErrorCodes.MemoryOperationFailed">
            <summary>
            The requested memory operation failed.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.JsonRpcErrorCodes.IsServerError(System.Int32)">
            <summary>
            Determines if the given error code is in the server error range (-32000 to -32099).
            </summary>
            <param name="errorCode">The error code to check.</param>
            <returns>True if the error code is a server error, false otherwise.</returns>
        </member>
        <member name="M:COA.Mcp.Protocol.JsonRpcErrorCodes.IsMcpError(System.Int32)">
            <summary>
            Determines if the given error code is an MCP-specific error (-32100 to -32199).
            </summary>
            <param name="errorCode">The error code to check.</param>
            <returns>True if the error code is MCP-specific, false otherwise.</returns>
        </member>
        <member name="M:COA.Mcp.Protocol.JsonRpcErrorCodes.GetStandardErrorDescription(System.Int32)">
            <summary>
            Gets a human-readable description for standard JSON-RPC error codes.
            </summary>
            <param name="errorCode">The error code.</param>
            <returns>A description of the error, or null if the code is not recognized.</returns>
        </member>
        <member name="T:COA.Mcp.Protocol.ServerCapabilities">
            <summary>
            Defines the capabilities supported by an MCP server.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ServerCapabilities.Tools">
            <summary>
            Gets or sets the tools capability marker.
            </summary>
            <value>An empty object {} indicates tool support is available.</value>
        </member>
        <member name="P:COA.Mcp.Protocol.ServerCapabilities.Resources">
            <summary>
            Gets or sets the resource capabilities supported by the server.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ServerCapabilities.Prompts">
            <summary>
            Gets or sets the prompts capability marker.
            </summary>
            <value>An empty object {} indicates prompt support is available.</value>
        </member>
        <member name="T:COA.Mcp.Protocol.ResourceCapabilities">
            <summary>
            Defines specific capabilities for resource handling.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ResourceCapabilities.Subscribe">
            <summary>
            Gets or sets whether the server supports resource subscriptions.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ResourceCapabilities.ListChanged">
            <summary>
            Gets or sets whether the server can notify when the resource list changes.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.InitializeRequest">
            <summary>
            Request to initialize the MCP connection.
            </summary>
            <remarks>
            This is the first request sent by the client after establishing a connection.
            </remarks>
        </member>
        <member name="P:COA.Mcp.Protocol.InitializeRequest.ProtocolVersion">
            <summary>
            Gets or sets the MCP protocol version the client supports.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.InitializeRequest.Capabilities">
            <summary>
            Gets or sets the capabilities supported by the client.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.InitializeRequest.ClientInfo">
            <summary>
            Gets or sets information about the client implementation.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.InitializeResult">
            <summary>
            Response to an initialization request.
            </summary>
            <remarks>
            Contains the server's capabilities and version information.
            </remarks>
        </member>
        <member name="P:COA.Mcp.Protocol.InitializeResult.ProtocolVersion">
            <summary>
            Gets or sets the MCP protocol version the server supports.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.InitializeResult.Capabilities">
            <summary>
            Gets or sets the capabilities supported by the server.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.InitializeResult.ServerInfo">
            <summary>
            Gets or sets information about the server implementation.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.ClientCapabilities">
            <summary>
            Defines the capabilities supported by an MCP client.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ClientCapabilities.Roots">
            <summary>
            Gets or sets the root directory capabilities.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ClientCapabilities.Sampling">
            <summary>
            Gets or sets the sampling capability marker.
            </summary>
            <value>An empty object {} indicates sampling support is available.</value>
        </member>
        <member name="T:COA.Mcp.Protocol.RootCapabilities">
            <summary>
            Defines capabilities for root directory handling.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.RootCapabilities.ListChanged">
            <summary>
            Gets or sets whether the client can notify when the root list changes.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.Implementation">
            <summary>
            Contains information about a client or server implementation.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.Implementation.Name">
            <summary>
            Gets or sets the name of the implementation.
            </summary>
            <example>COA Directus MCP Server</example>
        </member>
        <member name="P:COA.Mcp.Protocol.Implementation.Version">
            <summary>
            Gets or sets the version of the implementation.
            </summary>
            <example>1.0.0</example>
        </member>
        <member name="T:COA.Mcp.Protocol.Tool">
            <summary>
            Represents a tool that can be invoked by the client.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.Tool.Name">
            <summary>
            Gets or sets the unique name of the tool.
            </summary>
            <example>directus_list_items</example>
        </member>
        <member name="P:COA.Mcp.Protocol.Tool.Description">
            <summary>
            Gets or sets a human-readable description of what the tool does.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.Tool.InputSchema">
            <summary>
            Gets or sets the JSON Schema defining the tool's input parameters.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.Resource">
            <summary>
            Represents a resource that can be read by the client.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.Resource.Uri">
            <summary>
            Gets or sets the URI identifying the resource.
            </summary>
            <example>directus://collections</example>
        </member>
        <member name="P:COA.Mcp.Protocol.Resource.Name">
            <summary>
            Gets or sets the human-readable name of the resource.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.Resource.Description">
            <summary>
            Gets or sets a description of the resource.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.Resource.MimeType">
            <summary>
            Gets or sets the MIME type of the resource content.
            </summary>
            <example>application/json</example>
        </member>
        <member name="T:COA.Mcp.Protocol.Prompt">
            <summary>
            Represents an interactive prompt that can guide the user through complex operations.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.Prompt.Name">
            <summary>
            Gets or sets the unique name of the prompt.
            </summary>
            <example>setup_directus_connection</example>
        </member>
        <member name="P:COA.Mcp.Protocol.Prompt.Description">
            <summary>
            Gets or sets a description of what the prompt helps accomplish.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.Prompt.Arguments">
            <summary>
            Gets or sets the arguments that can be provided to customize the prompt.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.PromptArgument">
            <summary>
            Represents an argument that can be passed to a prompt.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.PromptArgument.Name">
            <summary>
            Gets or sets the name of the argument.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.PromptArgument.Description">
            <summary>
            Gets or sets a description of the argument's purpose.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.PromptArgument.Required">
            <summary>
            Gets or sets whether this argument must be provided.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.CallToolRequest">
            <summary>
            Request to invoke a specific tool.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.CallToolRequest.Name">
            <summary>
            Gets or sets the name of the tool to invoke.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.CallToolRequest.Arguments">
            <summary>
            Gets or sets the arguments to pass to the tool.
            </summary>
            <value>Must match the tool's input schema.</value>
        </member>
        <member name="T:COA.Mcp.Protocol.CallToolResult">
            <summary>
            Result returned from a tool invocation.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.CallToolResult.Content">
            <summary>
            Gets or sets the content returned by the tool.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.CallToolResult.IsError">
            <summary>
            Gets or sets whether the tool encountered an error.
            </summary>
            <value>If true, the content contains error information.</value>
        </member>
        <member name="T:COA.Mcp.Protocol.ToolContent">
            <summary>
            Represents a piece of content returned by a tool.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ToolContent.Type">
            <summary>
            Gets or sets the content type.
            </summary>
            <value>Currently only "text" is supported.</value>
        </member>
        <member name="P:COA.Mcp.Protocol.ToolContent.Text">
            <summary>
            Gets or sets the text content.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.ListToolsResult">
            <summary>
            Result of a tools/list request.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ListToolsResult.Tools">
            <summary>
            Gets or sets the list of available tools.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.ListResourcesResult">
            <summary>
            Result of a resources/list request.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ListResourcesResult.Resources">
            <summary>
            Gets or sets the list of available resources.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.ListPromptsResult">
            <summary>
            Result of a prompts/list request.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ListPromptsResult.Prompts">
            <summary>
            Gets or sets the list of available prompts.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.ReadResourceRequest">
            <summary>
            Request to read a specific resource by URI.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ReadResourceRequest.Uri">
            <summary>
            Gets or sets the URI of the resource to read.
            </summary>
            <example>codesearch://workspace/indexed-files</example>
        </member>
        <member name="T:COA.Mcp.Protocol.ReadResourceResult">
            <summary>
            Result of a resources/read request containing the resource content.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ReadResourceResult.Contents">
            <summary>
            Gets or sets the list of content items for this resource.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.ResourceContent">
            <summary>
            Represents a piece of content within a resource.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ResourceContent.Uri">
            <summary>
            Gets or sets the URI identifying this content piece.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ResourceContent.MimeType">
            <summary>
            Gets or sets the MIME type of the content.
            </summary>
            <example>text/plain, application/json, text/markdown</example>
        </member>
        <member name="P:COA.Mcp.Protocol.ResourceContent.Text">
            <summary>
            Gets or sets the text content.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ResourceContent.Blob">
            <summary>
            Gets or sets the base64-encoded binary content.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.GetPromptRequest">
            <summary>
            Request to get a specific prompt by name with optional arguments.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.GetPromptRequest.Name">
            <summary>
            Gets or sets the name of the prompt to retrieve.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.GetPromptRequest.Arguments">
            <summary>
            Gets or sets the arguments to customize the prompt.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.GetPromptResult">
            <summary>
            Result of a prompts/get request containing the rendered prompt content.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.GetPromptResult.Description">
            <summary>
            Gets or sets the description of what this prompt accomplishes.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.GetPromptResult.Messages">
            <summary>
            Gets or sets the list of messages that make up this prompt.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.PromptMessage">
            <summary>
            Represents a message within a prompt template.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.PromptMessage.Role">
            <summary>
            Gets or sets the role of the message sender.
            </summary>
            <example>user, assistant, system</example>
        </member>
        <member name="P:COA.Mcp.Protocol.PromptMessage.Content">
            <summary>
            Gets or sets the content of the message.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.PromptContent">
            <summary>
            Represents the content of a prompt message.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.PromptContent.Type">
            <summary>
            Gets or sets the content type.
            </summary>
            <value>Currently only "text" is supported.</value>
        </member>
        <member name="P:COA.Mcp.Protocol.PromptContent.Text">
            <summary>
            Gets or sets the text content of the message.
            </summary>
        </member>
        <member name="T:COA.Mcp.Protocol.ProgressNotification">
            <summary>
            Notification sent to inform clients about the progress of long-running operations.
            This extends JsonRpcNotification and provides structured progress information for
            operations like workspace indexing, batch operations, and large file analysis.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ProgressNotification.ProgressToken">
            <summary>
            Gets or sets the progress token that identifies this specific operation.
            This token is typically provided when starting the operation and should be
            used consistently across all progress updates for that operation.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ProgressNotification.Progress">
            <summary>
            Gets or sets the current progress value.
            This represents the number of completed items/steps in the operation.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ProgressNotification.Total">
            <summary>
            Gets or sets the total number of items/steps for this operation.
            When null, indicates that the total is unknown (indeterminate progress).
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.ProgressNotification.Message">
            <summary>
            Gets or sets an optional descriptive message about the current progress step.
            </summary>
            <example>
            "Indexing file: UserService.cs"
            "Processing batch operation 5 of 12"
            "Analyzing project structure..."
            </example>
        </member>
        <member name="M:COA.Mcp.Protocol.ProgressNotification.#ctor">
            <summary>
            Initializes a new instance of the ProgressNotification class.
            Sets the method to "notifications/progress" as per MCP protocol.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.ProgressNotification.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the ProgressNotification class with the specified parameters.
            </summary>
            <param name="progressToken">The progress token that identifies this operation.</param>
            <param name="progress">The current progress value.</param>
            <param name="total">The total number of items/steps (optional).</param>
            <param name="message">An optional descriptive message.</param>
        </member>
        <member name="T:COA.Mcp.Protocol.TypedJsonRpcRequest`1">
            <summary>
            Generic base class for strongly-typed JSON-RPC requests.
            This eliminates the need for object parameters and provides compile-time type safety.
            </summary>
            <typeparam name="TParams">The type of the request parameters.</typeparam>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcRequest`1.Id">
            <summary>
            Gets or sets the request identifier. Used to correlate requests with responses.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcRequest`1.Method">
            <summary>
            Gets or sets the name of the method to be invoked.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcRequest`1.Params">
            <summary>
            Gets or sets the strongly-typed parameters for the method call.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedJsonRpcRequest`1.#ctor">
            <summary>
            Initializes a new instance of the TypedJsonRpcRequest class.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedJsonRpcRequest`1.#ctor(System.Object,System.String,`0)">
            <summary>
            Initializes a new instance of the TypedJsonRpcRequest class with the specified parameters.
            </summary>
            <param name="id">The request identifier.</param>
            <param name="method">The method name.</param>
            <param name="parameters">The strongly-typed parameters.</param>
        </member>
        <member name="T:COA.Mcp.Protocol.TypedJsonRpcResponse`1">
            <summary>
            Generic base class for strongly-typed JSON-RPC responses.
            This provides compile-time type safety for response data.
            </summary>
            <typeparam name="TResult">The type of the response result.</typeparam>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcResponse`1.Id">
            <summary>
            Gets or sets the request identifier that this response correlates to.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcResponse`1.Result">
            <summary>
            Gets or sets the strongly-typed result of the method call.
            This property is mutually exclusive with Error.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcResponse`1.Error">
            <summary>
            Gets or sets the error information if the method call failed.
            This property is mutually exclusive with Result.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcResponse`1.IsError">
            <summary>
            Gets a value indicating whether this response represents an error.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedJsonRpcResponse`1.#ctor">
            <summary>
            Initializes a new instance of the TypedJsonRpcResponse class.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedJsonRpcResponse`1.#ctor(System.Object,`0)">
            <summary>
            Initializes a new instance of the TypedJsonRpcResponse class with a successful result.
            </summary>
            <param name="id">The request identifier.</param>
            <param name="result">The result data.</param>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedJsonRpcResponse`1.#ctor(System.Object,COA.Mcp.Protocol.JsonRpcError)">
            <summary>
            Initializes a new instance of the TypedJsonRpcResponse class with an error.
            </summary>
            <param name="id">The request identifier.</param>
            <param name="error">The error information.</param>
        </member>
        <member name="T:COA.Mcp.Protocol.TypedJsonRpcNotification`1">
            <summary>
            Generic base class for strongly-typed JSON-RPC notifications.
            Notifications do not expect a response from the receiver.
            </summary>
            <typeparam name="TParams">The type of the notification parameters.</typeparam>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcNotification`1.Method">
            <summary>
            Gets or sets the name of the method to be invoked.
            </summary>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedJsonRpcNotification`1.Params">
            <summary>
            Gets or sets the strongly-typed parameters for the method call.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedJsonRpcNotification`1.#ctor">
            <summary>
            Initializes a new instance of the TypedJsonRpcNotification class.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedJsonRpcNotification`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the TypedJsonRpcNotification class with the specified parameters.
            </summary>
            <param name="method">The method name.</param>
            <param name="parameters">The strongly-typed parameters.</param>
        </member>
        <member name="T:COA.Mcp.Protocol.TypedToolRequest`1">
            <summary>
            Generic base class for MCP tool requests with strongly-typed parameters.
            This provides a foundation for building type-safe tool implementations.
            </summary>
            <typeparam name="TParams">The type of the tool parameters.</typeparam>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedToolRequest`1.ToolName">
            <summary>
            Gets the name of the tool being invoked.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedToolRequest`1.#ctor">
            <summary>
            Initializes a new instance of the TypedToolRequest class.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedToolRequest`1.#ctor(System.Object,`0)">
            <summary>
            Initializes a new instance of the TypedToolRequest class with the specified parameters.
            </summary>
            <param name="id">The request identifier.</param>
            <param name="parameters">The strongly-typed tool parameters.</param>
        </member>
        <member name="T:COA.Mcp.Protocol.TypedToolResponse`1">
            <summary>
            Generic base class for MCP tool responses with strongly-typed results.
            This provides compile-time type safety for tool result data.
            </summary>
            <typeparam name="TResult">The type of the tool result.</typeparam>
        </member>
        <member name="P:COA.Mcp.Protocol.TypedToolResponse`1.ToolResult">
            <summary>
            Gets or sets the strongly-typed tool result data.
            This is a convenience property that wraps the Result.Content.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedToolResponse`1.#ctor">
            <summary>
            Initializes a new instance of the TypedToolResponse class.
            </summary>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedToolResponse`1.#ctor(System.Object,`0)">
            <summary>
            Initializes a new instance of the TypedToolResponse class with a successful result.
            </summary>
            <param name="id">The request identifier.</param>
            <param name="toolResult">The strongly-typed tool result.</param>
        </member>
        <member name="M:COA.Mcp.Protocol.TypedToolResponse`1.#ctor(System.Object,COA.Mcp.Protocol.JsonRpcError)">
            <summary>
            Initializes a new instance of the TypedToolResponse class with an error.
            </summary>
            <param name="id">The request identifier.</param>
            <param name="error">The error information.</param>
        </member>
    </members>
</doc>
